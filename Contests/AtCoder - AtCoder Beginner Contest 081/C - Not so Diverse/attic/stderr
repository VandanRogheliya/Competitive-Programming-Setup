/mnt/6f13bc05-0ba3-4a45-aa72-357a2c0037d4/Documents/Competitive Coding Space/Contests/AtCoder - AtCoder Beginner Contest 081/C - Not so Diverse/default.cpp: In instantiation of â€˜[01m[Kvoid __print(const std::pair<_T1, _T2>&) [with T = const long long int; V = std::vector<long long int>][m[Kâ€™:
[01m[K/mnt/6f13bc05-0ba3-4a45-aa72-357a2c0037d4/Documents/Competitive Coding Space/Contests/AtCoder - AtCoder Beginner Contest 081/C - Not so Diverse/default.cpp:37:103:[m[K   required from â€˜[01m[Kvoid __print(const T&) [with T = std::map<long long int, std::vector<long long int>, std::greater<long long int> >][m[Kâ€™
[01m[K/mnt/6f13bc05-0ba3-4a45-aa72-357a2c0037d4/Documents/Competitive Coding Space/Contests/AtCoder - AtCoder Beginner Contest 081/C - Not so Diverse/default.cpp:40:35:[m[K   required from â€˜[01m[Kvoid _print(T, V ...) [with T = std::map<long long int, std::vector<long long int>, std::greater<long long int> >; V = {}][m[Kâ€™
[01m[K/mnt/6f13bc05-0ba3-4a45-aa72-357a2c0037d4/Documents/Competitive Coding Space/Contests/AtCoder - AtCoder Beginner Contest 081/C - Not so Diverse/default.cpp:102:5:[m[K   required from here
[01m[K/mnt/6f13bc05-0ba3-4a45-aa72-357a2c0037d4/Documents/Competitive Coding Space/Contests/AtCoder - AtCoder Beginner Contest 081/C - Not so Diverse/default.cpp:35:88:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[K__print(const std::vector<long long int>&)[m[Kâ€™
   35 | void __print(const pair<T, V>& x) { cerr << '{'; __print(x.first); cerr << ','; [01;31m[K__print(x.second)[m[K; cerr << '}'; }
      |                                                                                 [01;31m[K~~~~~~~^~~~~~~~~~[m[K
[01m[K/mnt/6f13bc05-0ba3-4a45-aa72-357a2c0037d4/Documents/Competitive Coding Space/Contests/AtCoder - AtCoder Beginner Contest 081/C - Not so Diverse/default.cpp:20:6:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid __print(int)[m[Kâ€™
   20 | void [01;36m[K__print[m[K(int x) { cerr << x; }
      |      [01;36m[K^~~~~~~[m[K
[01m[K/mnt/6f13bc05-0ba3-4a45-aa72-357a2c0037d4/Documents/Competitive Coding Space/Contests/AtCoder - AtCoder Beginner Contest 081/C - Not so Diverse/default.cpp:20:18:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kconst std::vector<long long int>[m[Kâ€™ to â€˜[01m[Kint[m[Kâ€™
   20 | void __print([01;36m[Kint x[m[K) { cerr << x; }
      |              [01;36m[K~~~~^[m[K
[01m[K/mnt/6f13bc05-0ba3-4a45-aa72-357a2c0037d4/Documents/Competitive Coding Space/Contests/AtCoder - AtCoder Beginner Contest 081/C - Not so Diverse/default.cpp:21:6:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid __print(long int)[m[Kâ€™
   21 | void [01;36m[K__print[m[K(long x) { cerr << x; }
      |      [01;36m[K^~~~~~~[m[K
[01m[K/mnt/6f13bc05-0ba3-4a45-aa72-357a2c0037d4/Documents/Competitive Coding Space/Contests/AtCoder - AtCoder Beginner Contest 081/C - Not so Diverse/default.cpp:21:19:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kconst std::vector<long long int>[m[Kâ€™ to â€˜[01m[Klong int[m[Kâ€™
   21 | void __print([01;36m[Klong x[m[K) { cerr << x; }
      |              [01;36m[K~~~~~^[m[K
[01m[K/mnt/6f13bc05-0ba3-4a45-aa72-357a2c0037d4/Documents/Competitive Coding Space/Contests/AtCoder - AtCoder Beginner Contest 081/C - Not so Diverse/default.cpp:22:6:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid __print(long long int)[m[Kâ€™
   22 | void [01;36m[K__print[m[K(long long x) { cerr << x; }
      |      [01;36m[K^~~~~~~[m[K
[01m[K/mnt/6f13bc05-0ba3-4a45-aa72-357a2c0037d4/Documents/Competitive Coding Space/Contests/AtCoder - AtCoder Beginner Contest 081/C - Not so Diverse/default.cpp:22:24:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kconst std::vector<long long int>[m[Kâ€™ to â€˜[01m[Klong long int[m[Kâ€™
   22 | void __print([01;36m[Klong long x[m[K) { cerr << x; }
      |              [01;36m[K~~~~~~~~~~^[m[K
[01m[K/mnt/6f13bc05-0ba3-4a45-aa72-357a2c0037d4/Documents/Competitive Coding Space/Contests/AtCoder - AtCoder Beginner Contest 081/C - Not so Diverse/default.cpp:23:6:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid __print(unsigned int)[m[Kâ€™
   23 | void [01;36m[K__print[m[K(unsigned x) { cerr << x; }
      |      [01;36m[K^~~~~~~[m[K
[01m[K/mnt/6f13bc05-0ba3-4a45-aa72-357a2c0037d4/Documents/Competitive Coding Space/Contests/AtCoder - AtCoder Beginner Contest 081/C - Not so Diverse/default.cpp:23:23:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kconst std::vector<long long int>[m[Kâ€™ to â€˜[01m[Kunsigned int[m[Kâ€™
   23 | void __print([01;36m[Kunsigned x[m[K) { cerr << x; }
      |              [01;36m[K~~~~~~~~~^[m[K
[01m[K/mnt/6f13bc05-0ba3-4a45-aa72-357a2c0037d4/Documents/Competitive Coding Space/Contests/AtCoder - AtCoder Beginner Contest 081/C - Not so Diverse/default.cpp:24:6:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid __print(long unsigned int)[m[Kâ€™
   24 | void [01;36m[K__print[m[K(unsigned long x) { cerr << x; }
      |      [01;36m[K^~~~~~~[m[K
[01m[K/mnt/6f13bc05-0ba3-4a45-aa72-357a2c0037d4/Documents/Competitive Coding Space/Contests/AtCoder - AtCoder Beginner Contest 081/C - Not so Diverse/default.cpp:24:28:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kconst std::vector<long long int>[m[Kâ€™ to â€˜[01m[Klong unsigned int[m[Kâ€™
   24 | void __print([01;36m[Kunsigned long x[m[K) { cerr << x; }
      |              [01;36m[K~~~~~~~~~~~~~~^[m[K
[01m[K/mnt/6f13bc05-0ba3-4a45-aa72-357a2c0037d4/Documents/Competitive Coding Space/Contests/AtCoder - AtCoder Beginner Contest 081/C - Not so Diverse/default.cpp:25:6:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid __print(long long unsigned int)[m[Kâ€™
   25 | void [01;36m[K__print[m[K(unsigned long long x) { cerr << x; }
      |      [01;36m[K^~~~~~~[m[K
[01m[K/mnt/6f13bc05-0ba3-4a45-aa72-357a2c0037d4/Documents/Competitive Coding Space/Contests/AtCoder - AtCoder Beginner Contest 081/C - Not so Diverse/default.cpp:25:33:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kconst std::vector<long long int>[m[Kâ€™ to â€˜[01m[Klong long unsigned int[m[Kâ€™
   25 | void __print([01;36m[Kunsigned long long x[m[K) { cerr << x; }
      |              [01;36m[K~~~~~~~~~~~~~~~~~~~^[m[K
[01m[K/mnt/6f13bc05-0ba3-4a45-aa72-357a2c0037d4/Documents/Competitive Coding Space/Contests/AtCoder - AtCoder Beginner Contest 081/C - Not so Diverse/default.cpp:26:6:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid __print(float)[m[Kâ€™
   26 | void [01;36m[K__print[m[K(float x) { cerr << x; }
      |      [01;36m[K^~~~~~~[m[K
[01m[K/mnt/6f13bc05-0ba3-4a45-aa72-357a2c0037d4/Documents/Competitive Coding Space/Contests/AtCoder - AtCoder Beginner Contest 081/C - Not so Diverse/default.cpp:26:20:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kconst std::vector<long long int>[m[Kâ€™ to â€˜[01m[Kfloat[m[Kâ€™
   26 | void __print([01;36m[Kfloat x[m[K) { cerr << x; }
      |              [01;36m[K~~~~~~^[m[K
[01m[K/mnt/6f13bc05-0ba3-4a45-aa72-357a2c0037d4/Documents/Competitive Coding Space/Contests/AtCoder - AtCoder Beginner Contest 081/C - Not so Diverse/default.cpp:27:6:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid __print(double)[m[Kâ€™
   27 | void [01;36m[K__print[m[K(double x) { cerr << x; }
      |      [01;36m[K^~~~~~~[m[K
[01m[K/mnt/6f13bc05-0ba3-4a45-aa72-357a2c0037d4/Documents/Competitive Coding Space/Contests/AtCoder - AtCoder Beginner Contest 081/C - Not so Diverse/default.cpp:27:21:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kconst std::vector<long long int>[m[Kâ€™ to â€˜[01m[Kdouble[m[Kâ€™
   27 | void __print([01;36m[Kdouble x[m[K) { cerr << x; }
      |              [01;36m[K~~~~~~~^[m[K
[01m[K/mnt/6f13bc05-0ba3-4a45-aa72-357a2c0037d4/Documents/Competitive Coding Space/Contests/AtCoder - AtCoder Beginner Contest 081/C - Not so Diverse/default.cpp:28:6:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid __print(long double)[m[Kâ€™
   28 | void [01;36m[K__print[m[K(long double x) { cerr << x; }
      |      [01;36m[K^~~~~~~[m[K
[01m[K/mnt/6f13bc05-0ba3-4a45-aa72-357a2c0037d4/Documents/Competitive Coding Space/Contests/AtCoder - AtCoder Beginner Contest 081/C - Not so Diverse/default.cpp:28:26:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kconst std::vector<long long int>[m[Kâ€™ to â€˜[01m[Klong double[m[Kâ€™
   28 | void __print([01;36m[Klong double x[m[K) { cerr << x; }
      |              [01;36m[K~~~~~~~~~~~~^[m[K
[01m[K/mnt/6f13bc05-0ba3-4a45-aa72-357a2c0037d4/Documents/Competitive Coding Space/Contests/AtCoder - AtCoder Beginner Contest 081/C - Not so Diverse/default.cpp:29:6:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid __print(char)[m[Kâ€™
   29 | void [01;36m[K__print[m[K(char x) { cerr << '\'' << x << '\''; }
      |      [01;36m[K^~~~~~~[m[K
[01m[K/mnt/6f13bc05-0ba3-4a45-aa72-357a2c0037d4/Documents/Competitive Coding Space/Contests/AtCoder - AtCoder Beginner Contest 081/C - Not so Diverse/default.cpp:29:19:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kconst std::vector<long long int>[m[Kâ€™ to â€˜[01m[Kchar[m[Kâ€™
   29 | void __print([01;36m[Kchar x[m[K) { cerr << '\'' << x << '\''; }
      |              [01;36m[K~~~~~^[m[K
[01m[K/mnt/6f13bc05-0ba3-4a45-aa72-357a2c0037d4/Documents/Competitive Coding Space/Contests/AtCoder - AtCoder Beginner Contest 081/C - Not so Diverse/default.cpp:30:6:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid __print(const char*)[m[Kâ€™
   30 | void [01;36m[K__print[m[K(const char* x) { cerr << '\"' << x << '\"'; }
      |      [01;36m[K^~~~~~~[m[K
[01m[K/mnt/6f13bc05-0ba3-4a45-aa72-357a2c0037d4/Documents/Competitive Coding Space/Contests/AtCoder - AtCoder Beginner Contest 081/C - Not so Diverse/default.cpp:30:26:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kconst std::vector<long long int>[m[Kâ€™ to â€˜[01m[Kconst char*[m[Kâ€™
   30 | void __print([01;36m[Kconst char* x[m[K) { cerr << '\"' << x << '\"'; }
      |              [01;36m[K~~~~~~~~~~~~^[m[K
[01m[K/mnt/6f13bc05-0ba3-4a45-aa72-357a2c0037d4/Documents/Competitive Coding Space/Contests/AtCoder - AtCoder Beginner Contest 081/C - Not so Diverse/default.cpp:31:6:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid __print(const string&)[m[Kâ€™
   31 | void [01;36m[K__print[m[K(const string& x) { cerr << '\"' << x << '\"'; }
      |      [01;36m[K^~~~~~~[m[K
[01m[K/mnt/6f13bc05-0ba3-4a45-aa72-357a2c0037d4/Documents/Competitive Coding Space/Contests/AtCoder - AtCoder Beginner Contest 081/C - Not so Diverse/default.cpp:31:28:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kconst std::vector<long long int>[m[Kâ€™ to â€˜[01m[Kconst string&[m[Kâ€™ {aka â€˜[01m[Kconst std::__cxx11::basic_string<char>&[m[Kâ€™}
   31 | void __print([01;36m[Kconst string& x[m[K) { cerr << '\"' << x << '\"'; }
      |              [01;36m[K~~~~~~~~~~~~~~^[m[K
[01m[K/mnt/6f13bc05-0ba3-4a45-aa72-357a2c0037d4/Documents/Competitive Coding Space/Contests/AtCoder - AtCoder Beginner Contest 081/C - Not so Diverse/default.cpp:32:6:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid __print(bool)[m[Kâ€™
   32 | void [01;36m[K__print[m[K(bool x) { cerr << (x ? "true" : "false"); }
      |      [01;36m[K^~~~~~~[m[K
[01m[K/mnt/6f13bc05-0ba3-4a45-aa72-357a2c0037d4/Documents/Competitive Coding Space/Contests/AtCoder - AtCoder Beginner Contest 081/C - Not so Diverse/default.cpp:32:19:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kconst std::vector<long long int>[m[Kâ€™ to â€˜[01m[Kbool[m[Kâ€™
   32 | void __print([01;36m[Kbool x[m[K) { cerr << (x ? "true" : "false"); }
      |              [01;36m[K~~~~~^[m[K
[01m[K/mnt/6f13bc05-0ba3-4a45-aa72-357a2c0037d4/Documents/Competitive Coding Space/Contests/AtCoder - AtCoder Beginner Contest 081/C - Not so Diverse/default.cpp:35:6:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T, class V> void __print(const std::pair<_T1, _T2>&)[m[Kâ€™
   35 | void [01;36m[K__print[m[K(const pair<T, V>& x) { cerr << '{'; __print(x.first); cerr << ','; __print(x.second); cerr << '}'; }
      |      [01;36m[K^~~~~~~[m[K
[01m[K/mnt/6f13bc05-0ba3-4a45-aa72-357a2c0037d4/Documents/Competitive Coding Space/Contests/AtCoder - AtCoder Beginner Contest 081/C - Not so Diverse/default.cpp:35:6:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/mnt/6f13bc05-0ba3-4a45-aa72-357a2c0037d4/Documents/Competitive Coding Space/Contests/AtCoder - AtCoder Beginner Contest 081/C - Not so Diverse/default.cpp:35:88:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kconst std::vector<long long int>[m[Kâ€™ is not derived from â€˜[01m[Kconst std::pair<_T1, _T2>[m[Kâ€™
   35 | void __print(const pair<T, V>& x) { cerr << '{'; __print(x.first); cerr << ','; [01;36m[K__print(x.second)[m[K; cerr << '}'; }
      |                                                                                 [01;36m[K~~~~~~~^~~~~~~~~~[m[K
